@using RecipeMvc.Facade.Recipe
@model RecipeView
@{
    ViewData["Title"] = "Create Recipe";
    var ingredients = ViewBag.AvailableIngredients as List<IngredientView>;
}

<h2>Create Recipe</h2>

<form asp-action="Create" method="post">
    <div class="mb-3">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Title)
    </div>
    <div class="mb-3">
        @Html.LabelFor(x => x.Description)
        @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Description)
    </div>
    <div class="mb-3">
        @Html.LabelFor(x => x.Tags)
        @Html.TextBoxFor(x => x.Tags, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Tags)
    </div>

    <h4>Ingredients</h4>
    <div class="row mb-2">
        <div class="col">
            <input id="ingredient-search" class="form-control" placeholder="Search ingredient..." autocomplete="off" />
            <select id="ingredient-select" class="form-select mt-2">
                <option value="">Select ingredient</option>
                @foreach (var ing in ingredients)
                {
                    <option value="@ing.Id" data-name="@ing.Name">@ing.Name</option>
                }
            </select>
        </div>
        <div class="col">
            <input type="number" id="ingredient-amount" class="form-control" placeholder="Amount" min="0" step="any" />
        </div>
        <div class="col">
            <button type="button" id="add-ingredient" class="btn btn-secondary">Add</button>
        </div>
    </div>

    <ul id="added-ingredients" class="list-group mb-3"></ul>
    <div id="ingredients-hidden"></div>

    <button type="submit" class="btn btn-primary">Save</button>
</form>

@section Scripts {
    <script>
        // Filter dropdown as user types
        document.getElementById('ingredient-search').addEventListener('input', function () {
            var search = this.value.toLowerCase();
            var select = document.getElementById('ingredient-select');
            for (var i = 0; i < select.options.length; i++) {
                var option = select.options[i];
                option.style.display = option.text.toLowerCase().includes(search) ? '' : 'none';
            }
        });

        // Add ingredient to list
        document.getElementById('add-ingredient').addEventListener('click', function () {
            var select = document.getElementById('ingredient-select');
            var amount = document.getElementById('ingredient-amount').value;
            var id = select.value;
            var name = select.options[select.selectedIndex].text;

            if (!id || !amount) return;

            // Prevent duplicate ingredient
            var existing = document.querySelector(`#added-ingredients li[data-id='${id}']`);
            if (existing) return;

            // Add to visible list
            var ul = document.getElementById('added-ingredients');
            var li = document.createElement('li');
            li.className = 'list-group-item d-flex justify-content-between align-items-center';
            li.setAttribute('data-id', id);
            li.textContent = name + ' - ' + amount;
            var removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'btn btn-sm btn-danger ms-2';
            removeBtn.textContent = 'Remove';
            removeBtn.onclick = function () {
                ul.removeChild(li);
                hiddenDiv.removeChild(hiddenInputsDiv);
            };
            li.appendChild(removeBtn);
            ul.appendChild(li);

            // Add hidden inputs for form submission
            var hiddenDiv = document.getElementById('ingredients-hidden');
            var hiddenInputsDiv = document.createElement('div');
            hiddenInputsDiv.setAttribute('data-id', id);
            hiddenInputsDiv.innerHTML =
                `<input type="hidden" name="Ingredients[${ul.children.length - 1}].IngredientId" value="${id}" />
                 <input type="hidden" name="Ingredients[${ul.children.length - 1}].Amount" value="${amount}" />`;
            hiddenDiv.appendChild(hiddenInputsDiv);

            // Reset fields
            select.selectedIndex = 0;
            document.getElementById('ingredient-amount').value = '';
            document.getElementById('ingredient-search').value = '';
            // Reset dropdown filter
            for (var i = 0; i < select.options.length; i++) {
                select.options[i].style.display = '';
            }
        });
    </script>
}