@using RecipeMvc.Facade.Recipe
@model RecipeView
@{
    ViewData["Title"] = "Create Recipe";
    var ingredients = ViewBag.AvailableIngredients as List<IngredientView>;
}

<h2>Create Recipe</h2>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul class="mb-0">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}
<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="mb-3">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Title)
    </div>
    <div class="mb-3">
        @Html.LabelFor(x => x.Description)
        @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Description)
    </div>
    <div class="mb-3">
        @Html.LabelFor(x => x.Tags)
        @Html.TextBoxFor(x => x.Tags, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Tags)
    </div>

    <div class="form-group">
        <label asp-for="ImageFile"></label>
        <input asp-for="ImageFile" type="file" class="form-control" />
        <span asp-validation-for="ImageFile" class="text-danger"></span>
    </div>
    <label asp-for="Ingredients"></label>
    <div class="row mb-2">
        <div class="col position-relative">
            <input id="ingredient-search" class="form-control" placeholder="Search ingredient..." autocomplete="off" />
            <div id="ingredient-dropdown" class="dropdown-menu w-100" style="max-height:200px;overflow-y:auto;position:absolute;z-index:1000; display:none;">
            @if(ingredients != null) {
                @foreach (var ing in ingredients)
                {
                        <button type="button" class="dropdown-item" data-id="@ing.Id" data-name="@ing.Name" data-unit="@ing.Unit">@ing.Name (@ing.Unit)</button>
                }
            }
            </div>
        </div>
        <div class="col">
            <input type="number" id="ingredient-amount" class="form-control" placeholder="Amount" min="0" step="any" />
        </div>
        <div class="col">
            <button type="button" id="add-ingredient" class="btn btn-secondary">Add</button>
        </div>
    </div>

    <ul id="added-ingredients" class="list-group mb-3"></ul>
    <div id="ingredients-hidden"></div>

    <button type="submit" class="btn btn-primary">Save</button>
</form>

@section Scripts {
    <script>
        const searchInput = document.getElementById('ingredient-search');
        const dropdown = document.getElementById('ingredient-dropdown');
        let dropdownHasFocus = false;

        // Show dropdown on focus
        searchInput.addEventListener('focus', function () {
            dropdown.style.display = 'block';
        });

        // Hide dropdown on blur, unless mouse is over dropdown
        searchInput.addEventListener('blur', function () {
            setTimeout(function () {
                if (!dropdownHasFocus) dropdown.style.display = 'none';
            }, 100);
        });

        dropdown.addEventListener('mouseenter', function () {
            dropdownHasFocus = true;
        });
        dropdown.addEventListener('mouseleave', function () {
            dropdownHasFocus = false;
            setTimeout(function () {
                if (document.activeElement !== searchInput) dropdown.style.display = 'none';
            }, 100);
        });

        // Filter dropdown as user types
        searchInput.addEventListener('input', function () {
            var search = this.value.toLowerCase();
            var items = document.querySelectorAll('#ingredient-dropdown .dropdown-item');
            items.forEach(function (item) {
                item.style.display = item.textContent.toLowerCase().includes(search) ? '' : 'none';
            });
            dropdown.style.display = 'block';
        });

        // Select ingredient from dropdown
        let selectedIngredientId = '';
        let selectedIngredientName = '';
        let selectedIngredientUnit = '';
        document.querySelectorAll('#ingredient-dropdown .dropdown-item').forEach(function (item) {
            item.addEventListener('click', function () {
                selectedIngredientId = this.getAttribute('data-id');
                selectedIngredientName = this.getAttribute('data-name');
                selectedIngredientUnit = this.getAttribute('data-unit');
                searchInput.value = selectedIngredientName;
                dropdown.style.display = 'none';
                searchInput.focus();
            });
        });

        // Add ingredient to list
        document.getElementById('add-ingredient').addEventListener('click', function () {
            var id = selectedIngredientId;
            var name = selectedIngredientName;
            var amount = document.getElementById('ingredient-amount').value;
			var unit = selectedIngredientUnit;

            if (!id || !amount) return;

            // Prevent duplicate ingredient
            var existing = document.querySelector(`#added-ingredients li[data-id='${id}']`);
            if (existing) return;

            // Add to visible list
            var ul = document.getElementById('added-ingredients');
            var li = document.createElement('li');
            li.className = 'list-group-item d-flex justify-content-between align-items-center';
            li.setAttribute('data-id', id);
            li.textContent = name + ' - ' + amount + ' ' + unit;
            var removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'btn btn-sm btn-danger ms-2';
            removeBtn.textContent = 'Remove';
            removeBtn.onclick = function () {
                ul.removeChild(li);
                hiddenDiv.removeChild(hiddenInputsDiv);
            };
            li.appendChild(removeBtn);
            ul.appendChild(li);

            // Add hidden inputs for form submission
            var hiddenDiv = document.getElementById('ingredients-hidden');
            var hiddenInputsDiv = document.createElement('div');
            hiddenInputsDiv.setAttribute('data-id', id);
            hiddenInputsDiv.innerHTML =
                `<input type="hidden" name="Ingredients[${ul.children.length - 1}].IngredientId" value="${id}" />
                 <input type="hidden" name="Ingredients[${ul.children.length - 1}].Quantity" value="${amount}" />
                 <input type="hidden" name="Ingredients[${ul.children.length - 1}].Unit" value="${selectedIngredientUnit}" />`;
            hiddenDiv.appendChild(hiddenInputsDiv);

            // Reset fields
            selectedIngredientId = '';
            selectedIngredientName = '';
            selectedIngredientUnit = '';
            searchInput.value = '';
            document.getElementById('ingredient-amount').value = '';
            // Show all dropdown items again
            document.querySelectorAll('#ingredient-dropdown .dropdown-item').forEach(function (item) {
                item.style.display = '';
            });
        });
    </script>
}